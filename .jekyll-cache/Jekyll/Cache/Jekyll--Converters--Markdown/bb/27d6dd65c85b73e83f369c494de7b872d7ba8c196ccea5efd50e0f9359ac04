I"wù<!-- ---
layout: default
title: Session 2
permalink: /tecto/session-2
--- -->

<h1 id="session-2---intro-to-shell-and-lsdtopotools">Session 2 - Intro to shell and LSDTopoTools</h1>

<h2 id="objectives-of-the-day">Objectives of the day</h2>

<ol>
  <li>Communicate with the server ::: Learn the basics of the shell usage.</li>
  <li>Have a working infrastructure ::: Install LSDTopoTools.</li>
  <li>Learn the logic of LSDTopoTools ::: Run an basic analysis on example data.</li>
  <li>Compute the river network of your study area ::: Create a proper parameter file that suits your needs.</li>
</ol>

<hr />

<h2 id="intro-to-the-shell">Intro to the shell</h2>

<ul>
  <li>A very short intro on the Linux terminal <a href="https://www.digitalocean.com/community/tutorials/an-introduction-to-the-linux-terminal">here</a>.</li>
  <li>A longer intro on the Linux terminal <a href="https://ryanstutorials.net/linuxtutorial/">here</a>.</li>
</ul>

<h3 id="basic-shell-commands">Basic shell commands</h3>

<table>
  <thead>
    <tr>
      <th>Command</th>
      <th>Use</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>pwd</td>
      <td>Print current (working directory)</td>
    </tr>
    <tr>
      <td>ls <em>my_directory</em></td>
      <td>List files in a directory</td>
    </tr>
    <tr>
      <td>cd <em>my_path</em></td>
      <td>Define (go to) current directory</td>
    </tr>
    <tr>
      <td>cd</td>
      <td>Return to <code class="language-plaintext highlighter-rouge">HOME</code> directory</td>
    </tr>
    <tr>
      <td>cd ../</td>
      <td>Go to parent directory</td>
    </tr>
    <tr>
      <td>rm <em>my_file</em></td>
      <td>Remove file (<strong>!no way back!</strong>)</td>
    </tr>
    <tr>
      <td>mkdir <em>my_directory</em></td>
      <td>Create directory</td>
    </tr>
    <tr>
      <td>rmdir -rf <em>my_directory</em></td>
      <td>Remove directory (<strong>!no way back!</strong>)</td>
    </tr>
    <tr>
      <td>cp <em>path_to_source</em> <em>path_to_destination</em></td>
      <td>Copy file or directory</td>
    </tr>
    <tr>
      <td>mv <em>path_to_source</em> <em>path_to_destination</em></td>
      <td>Move file or directory</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">Ctrl-Shift-C</code></td>
      <td>Copy some text in vim editor</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">Ctrl-Shift-V</code></td>
      <td>Paste some text in vim editor</td>
    </tr>
    <tr>
      <td>vim <em>path_to_text_file</em></td>
      <td>Open text file using <code class="language-plaintext highlighter-rouge">vim</code></td>
    </tr>
    <tr>
      <td>unzip <em>path_to_archive_file</em> -d <em>path_to_destination</em></td>
      <td>Unzip a <code class="language-plaintext highlighter-rouge">.zip</code> archive in a directory</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">Ctrl-C</code></td>
      <td>Cancel current command</td>
    </tr>
  </tbody>
</table>

<h3 id="good-practices">Good practices</h3>

<p>Working on the terminal can difficult in the beginning. One difficulty is to always know where you are located in the file tree.</p>

<ul>
  <li>Use <code class="language-plaintext highlighter-rouge">pwd</code> command to print the current directory.</li>
  <li>
    <p>Use <code class="language-plaintext highlighter-rouge">ls</code> (list) or <code class="language-plaintext highlighter-rouge">ll</code> (long list) commands to print the content of the current directory. Use it <em>often</em>‚Ä¶ Typically after a command that create outputs, to check whether they are created‚Ä¶</p>

    <p><img src="imgs/ls-command.png" alt="ls-command" /></p>
  </li>
  <li>Use <code class="language-plaintext highlighter-rouge">Tab</code> key to auto-complete file names and directory names. Hit <code class="language-plaintext highlighter-rouge">Tab</code> key again to get a list of possibilities, if there are several ones.</li>
  <li>Use <code class="language-plaintext highlighter-rouge">Up </code> and <code class="language-plaintext highlighter-rouge">Down</code> arrows of the keyboard to navigate in the history of commands that you already executed.</li>
</ul>

<h3 id="paths-on-the-pelican-server">Paths (on the Pelican server)</h3>

<p>Some facts about paths to directories and files:</p>

<ul>
  <li>When you connect to the Pelican server, you land in your <code class="language-plaintext highlighter-rouge">HOME</code> directory.</li>
  <li>The absolute path of your <code class="language-plaintext highlighter-rouge">HOME</code> directory is: <code class="language-plaintext highlighter-rouge">/home/elic/MY_LOGIN</code>.</li>
  <li>Anywhere in the file tree, execute the <code class="language-plaintext highlighter-rouge">cd</code> command to return the <code class="language-plaintext highlighter-rouge">HOME</code> directory.</li>
  <li>Absolute paths are always written with respect to the <code class="language-plaintext highlighter-rouge">root</code> of the file tree, i.e. <code class="language-plaintext highlighter-rouge">/</code>.</li>
  <li>A typical absolute path to the DEM file would be: <code class="language-plaintext highlighter-rouge">/home/elic/MY_LOGIN/lsdtt/data/dem-analysis/mnt-ambleve-10m.tif</code>.  Notice the <code class="language-plaintext highlighter-rouge">/</code> at the beginning of the path, indicating that it is an absolute path, i.e. starting from the <code class="language-plaintext highlighter-rouge">root</code>.</li>
  <li>A typical relative path to the DEM file,  if you are located in your <code class="language-plaintext highlighter-rouge">HOME</code> directory: <code class="language-plaintext highlighter-rouge">lsdtt/data/dem-analysis/mnt-ambleve-10m.tif</code>. Note that there is no <code class="language-plaintext highlighter-rouge">/</code> at the beginning of the path.</li>
  <li>Relative paths are always expressed relatively to the current directory.</li>
  <li>To know the current directory, use the <code class="language-plaintext highlighter-rouge">pwd</code> command (print working directory).</li>
</ul>

<h3 id="sequence-of-commands-in-the-demo">Sequence of commands in the ‚Äúdemo‚Äù</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Print working directory</span>
<span class="nb">pwd</span>
<span class="c"># List files in current directory</span>
<span class="nb">ls</span>
<span class="c"># create new directory</span>
<span class="nb">mkdir </span>dem-analysis
<span class="c"># create file in dem-analysis directory</span>
vim dem-analysis/params.txt
<span class="c"># type i to activate insert mode, write something, hit Esc to quit edit mode, type ":wq" to write and quit the file</span>
<span class="c"># List files in dem-analysis directory</span>
<span class="nb">ls </span>dem-analysis
<span class="c"># Enter dem-analysis directory</span>
<span class="nb">cd </span>dem-analysis
<span class="c"># List files in current direct</span>
<span class="nb">ls</span>
<span class="c"># List files in parent directory</span>
<span class="nb">ls</span> ../
<span class="c"># Create new directory in current directory</span>
<span class="nb">mkdir </span>outputs
<span class="c"># list files in current directory</span>
<span class="nb">ls</span>
<span class="c"># Copy params.txt into outputs directory with a new name</span>
<span class="nb">cp </span>params.txt outputs/params-v2.txt
<span class="c"># Return to HOME directory</span>
<span class="nb">cd</span>
<span class="c"># Enter outputs directory</span>
<span class="nb">cd </span>dem-analysis/outputs
<span class="c"># Modify params-v2.txt file. Use "Ctrl-Shift-C" to copy and "Ctrl-Shift-V" to paste text.</span>
vim params-v2.txt
<span class="c"># Print working directory</span>
<span class="nb">pwd</span>
<span class="c"># Return to dem-analysis directory. The ~ is a way to create a path from the HOME directory. Useful when your are "lost" in the file structure.</span>
<span class="nb">cd</span> ~/dem-analysis
<span class="c"># Copy outputs as a new directory. The "-r" parameter is for "recursive", i.e. it will copy all subdirectories too.</span>
<span class="nb">cp</span> <span class="nt">-r</span> outputs outputs-v2
<span class="c"># List files in current directory</span>
<span class="nb">ls</span>
<span class="c"># Delete outputs/params.txt</span>
<span class="nb">rm </span>outputs/params-v2.txt
<span class="c"># Delete params.txt in current directory. The "-f" parameter is for "force".  </span>
<span class="nb">rm</span> <span class="nt">-f</span> params.txt
<span class="c"># Delete outputs-v2.</span>
<span class="nb">rm </span>outputs-v2
<span class="c"># To delete non-empty directories, do not forget the "-rf" parameters</span>
<span class="nb">rm</span> <span class="nt">-rf</span> outputs-v2
<span class="c"># List files in current directory</span>
<span class="nb">ls</span>
<span class="c"># Return to HOME directory</span>
<span class="nb">cd</span>
<span class="c"># Delete dem-analysis directory</span>
<span class="nb">rm</span> <span class="nt">-rf</span> dem-analysis
</code></pre></div></div>

<hr />

<h2 id="the-lsdtopotools-software">The LSDTopoTools software</h2>

<p>The LSDTopoTools software was developed by members of the Land Surface Dynamics (LSD) research group at the University of Edinburgh (<a href="https://lsdtopotools.github.io/">home page</a>).</p>

<p>The software aims to operate:</p>

<ul>
  <li>As a framework for implementing the latest developments in topographic analysis.</li>
  <li>As a framework for developing new topographic analysis techniques.</li>
  <li>As a framework for numerical modelling of landscapes.</li>
  <li>To improve the speed and performance of topographic analysis versus other tools (e.g., commercial GIS software).</li>
  <li>To enable <strong>reproducible</strong> topographic analysis in the research context.</li>
</ul>

<p>This software is constantly used for research and is regularly updated with new routines. Some popular techniques already implemented include:</p>

<ul>
  <li><a href="https://github.com/LSDtopotools/LSDTopoTools_AnalysisDriver">Basic topographic analysis</a></li>
  <li><a href="https://github.com/LSDtopotools/LSDTopoTools_ChannelExtraction">Channel network extraction from LiDAR data</a></li>
  <li><a href="https://github.com/LSDtopotools/LSDTopoTools_ChiMudd2014">Chi analysis</a></li>
  <li><a href="https://github.com/LSDtopotools/LSDTopoTools_CRNBasinwide">Calculation of erosion rates from cosmogenic nuclides</a></li>
  <li><a href="https://github.com/LSDtopotools/LSDTT_Hillslope_Analysis">Hilltop flow routing, and hillslope relief metrics</a></li>
  <li><a href="https://github.com/LSDtopotools/LSDTopoTools_FloodplainTerraceExtraction">Topographic extraction of floodplains and terraces</a></li>
</ul>

<h3 id="installation-of-lsdtopotools">Installation of LSDTopoTools</h3>

<p>Using your SSH client, connect to the Pelican server.</p>

<ol>
  <li>
    <p>Load the required modules:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> module purge
 module load 2019b
 module load ELIC_Python
 module load CMake/.3.15.3-GCCcore-8.3.0
</code></pre></div>    </div>
  </li>
  <li>
    <p>Return to (make sure your are in the) <code class="language-plaintext highlighter-rouge">HOME</code> directory:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nb">cd</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>Create <code class="language-plaintext highlighter-rouge">lsdtt</code> directory and enter it:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nb">mkdir </span>lsdtt
 <span class="nb">cd </span>lsdtt
</code></pre></div>    </div>
  </li>
  <li>
    <p>Clone the Github repository:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> git clone https://github.com/LSDtopotools/LSDTopoTools2
</code></pre></div>    </div>
  </li>
  <li>
    <p>Go to <code class="language-plaintext highlighter-rouge">src</code> directory:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nb">cd </span>LSDTopoTools2/src
</code></pre></div>    </div>
  </li>
  <li>
    <p>Open the <code class="language-plaintext highlighter-rouge">build.sh</code> file:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> vim build.sh
</code></pre></div>    </div>
  </li>
  <li>Hit <code class="language-plaintext highlighter-rouge">i</code> on your keyboard to insert text.</li>
  <li>Move within the file content using arrows of your keyboard to place the cursor at the beginning of the file.</li>
  <li>
    <p>Add the following line at the <strong>beginning</strong> (first line) of file.  In vim editor, use <code class="language-plaintext highlighter-rouge">Ctrl-Shift-V</code> to paste some text (to copy, use <code class="language-plaintext highlighter-rouge">Ctrl-Shift-C</code>.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nv">PREFIX</span><span class="o">=</span><span class="s2">"</span><span class="si">$(</span><span class="nb">pwd</span><span class="si">)</span><span class="s2">/.."</span>
</code></pre></div>    </div>
  </li>
  <li>Hit <code class="language-plaintext highlighter-rouge">Esc</code> on your keyboard to exit the <em>insert</em> mode.</li>
  <li>Type <code class="language-plaintext highlighter-rouge">:wq</code> to <em>write</em> and <em>quit</em> the text editor.</li>
  <li>
    <p>Compile the driver files:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sh build.sh
</code></pre></div>    </div>
    <p>It will take some time‚Ä¶</p>
  </li>
</ol>

<h3 id="installation-of-lsdmappingtools">Installation of LSDMappingTools</h3>

<p>The <a href="https://lsdtopotools.github.io/LSDTT_documentation/LSDTT_visualisation.html">LSDMappingTools</a> module is a LSDTopoTools component to map outputs using automatic procedures. It will be useful to produce intermediate data visualisation to check results directly on the server.</p>

<p>To install it, execute the following sequence of commands:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>```bash
# Enter lsdtt directory
cd
cd lsdtt

# Clone LSDMappingTools Github repository
git clone https://github.com/LSDtopotools/LSDMappingTools.git
```   
</code></pre></div></div>

<h3 id="add-lsdtt-variables-to-path">Add LSDTT variables to PATH</h3>

<ol>
  <li>
    <p>Open the <code class="language-plaintext highlighter-rouge">.bashrc</code> file in your <code class="language-plaintext highlighter-rouge">HOME</code> directory using the <code class="language-plaintext highlighter-rouge">vim</code> command.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nb">cd
 </span>vim .bashrc
</code></pre></div>    </div>
  </li>
  <li>Hit <code class="language-plaintext highlighter-rouge">i</code> on your keyboard to insert text.</li>
  <li>Move within the file content using arrows of your keyboard to place the cursor at the end of the file. <strong>Note</strong>: The file might be empty. It is a configuration file to set up your environment at the beginning of each session. Its content depends on the server raw setup.</li>
  <li>
    <p>Add the following lines at the end of file. Use <code class="language-plaintext highlighter-rouge">Ctrl-Shift-V</code> to paste some text (to copy, use <code class="language-plaintext highlighter-rouge">Ctrl-Shift-C</code>).</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> load_LSDTopoTools<span class="o">()</span>
 <span class="o">{</span>
   module purge
   module load 2019b
   module load ELIC_Python
   <span class="nv">PATH</span><span class="o">=</span><span class="k">${</span><span class="nv">HOME</span><span class="k">}</span>/lsdtt/LSDTopoTools2/bin:<span class="k">${</span><span class="nv">PATH</span><span class="k">}</span>
   <span class="nv">PYTHONPATH</span><span class="o">=</span><span class="k">${</span><span class="nv">HOME</span><span class="k">}</span>/lsdtt/LSDMappingTools:<span class="k">${</span><span class="nv">PYTHONPATH</span><span class="k">}</span>
 <span class="o">}</span>
</code></pre></div>    </div>
  </li>
  <li>Hit <code class="language-plaintext highlighter-rouge">Esc</code> on your keyboard to exit the <em>insert</em> mode.</li>
  <li>Type <code class="language-plaintext highlighter-rouge">:wq</code> to <em>write</em> and <em>quit</em> the text editor.</li>
  <li>
    <p>Reload the <code class="language-plaintext highlighter-rouge">.bashrc</code> file.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nb">source</span> .bashrc
</code></pre></div>    </div>
  </li>
</ol>

<h3 id="get-the-example-data">Get the example data</h3>

<ol>
  <li>
    <p>To download the example data, execute the following lines. Return to <code class="language-plaintext highlighter-rouge">HOME</code> directory and enter the <code class="language-plaintext highlighter-rouge">lsdtt</code> directory:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nb">cd
 cd </span>lsdtt
</code></pre></div>    </div>
  </li>
  <li>
    <p>Create the <code class="language-plaintext highlighter-rouge">data</code> directory:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nb">mkdir </span>data
 <span class="nb">cd </span>data
</code></pre></div>    </div>
  </li>
  <li>
    <p>Download data from Github repository, unzip and remove archive file:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> wget https://github.com/LSDtopotools/ExampleTopoDatasets/archive/master.zip
 unzip master.zip
 <span class="nb">mv</span> ./ExampleTopoDatasets-master ./ExampleTopoDatasets
 <span class="nb">rm </span>master.zip
</code></pre></div>    </div>
  </li>
  <li>
    <p>When removing a file or a directory, the terminal will prompt you whether you really want to remove it:</p>

    <p><img src="imgs/terminal-rm.png" alt="terminal-rm" /></p>
  </li>
  <li>
    <p>Type <code class="language-plaintext highlighter-rouge">y</code> to confirm (yes) or <code class="language-plaintext highlighter-rouge">n</code> to abort (no).</p>
  </li>
</ol>

<h3 id="directory-structure">Directory structure</h3>

<p>After installing the software and getting the example data, you should end up with the following directory structure (this is not the output of a specific command):</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>--| lsdtt
------| data
----------| subdirectories with different projects
------| LSDMappingTools
----------| subdirectories with source code and programs
------| LSDTopoTools2
----------| subdirectories with source code and programs
</code></pre></div></div>

<h2 id="basic-example-using-lsdtt">Basic example using LSDTT</h2>

<p>Before running your own analyses, it is important to make sure that the program is properly installed and set up on the server. Let‚Äôs begin by running LSDTT with the provided example data. More information about the basic usage of LSDTT is available <a href="https://lsdtopotools.github.io/LSDTT_documentation/LSDTT_basic_usage.html">here</a>.</p>

<ol>
  <li>
    <p>At the beginning of each new session on the server, you should load the LSDTT <em>environment</em>, i.e. load modules and add LSDTT to PATH. To to that, simply (because the function is stored in your <code class="language-plaintext highlighter-rouge">.bashrc</code> file, see ‚ÄúAdd LSDTT variables to PATH‚Äù) type:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> load_LSDTopoTools
</code></pre></div>    </div>
  </li>
  <li>
    <p>Navigate to the directory containing the example data:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nb">cd
 cd </span>lsdtt/data/ExampleTopoDatasets/BasicMetricsData
</code></pre></div>    </div>
  </li>
  <li>If you have correctly installed <code class="language-plaintext highlighter-rouge">LSDTopoTools</code>, you should be able to simply call <code class="language-plaintext highlighter-rouge">lsdtt-basic-metrics</code> command:
    <div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go"> lsdtt-basic-metrics WA_BasicMetrics02.driver
</span></code></pre></div>    </div>
  </li>
  <li>Press ‚ÄúEnter‚Äù and wait‚Ä¶ The larger the area and/or the finer the resolution, the longer it will last‚Ä¶ However, some messages are printed in the terminal. Read them, especially if the tool crashes !</li>
</ol>

<h2 id="how-does-lsdtt-work-">How does LSDTT work ?</h2>

<p><strong>Note</strong>: This section provides additional information about how LSDTT works. There is no need to run the commands or modify parameters files.</p>

<p>Starting from the basic example here above (all details <a href="https://lsdtopotools.github.io/LSDTT_documentation/LSDTT_basic_usage.html">here</a>), the typical command of LSDTopoTools is composed of two parts:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>lsdtt-basic-metrics WA_BasicMetrics02.driver
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">lsddtt-basic-metrics</code> is the name of the module of LSDTopoTools that you ask to run.</li>
  <li><code class="language-plaintext highlighter-rouge">WA_BasicMetrics02.driver</code> is the name of the file containing the input parameters used by the module. The extension of the file is <code class="language-plaintext highlighter-rouge">.driver</code>.</li>
</ul>

<p>Without any other parameters, you need to run the command in the directory that contains the parameters file.</p>

<p>Open the <code class="language-plaintext highlighter-rouge">WA_BasicMetrics02.driver</code> file using the following commands:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Make sure you are in the proper directory. If not, execute the commented line below.</span>
<span class="c"># cd lsdtt/data/ExampleTopoDatasets/BasicMetricsData</span>
<span class="c"># Open the file</span>
vim WA_BasicMetrics02.driver
</code></pre></div></div>

<p>The content of the <code class="language-plaintext highlighter-rouge">WA_BasicMetrics02.driver</code> file is the following:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Parameters for extracting simple surface metrics</span>
<span class="c"># Comments are preceeded by the hash symbol</span>
<span class="c"># Documentation can be found at: https://lsdtopotools.github.io/LSDTT_documentation/LSDTT_basic_usage.html</span>

<span class="c"># These are parameters for the file i/o</span>
<span class="nb">read </span>fname: WA
write fname: WA_SecondExample
channel heads fname: NULL

<span class="c"># Parameters for surface metrics</span>
surface_fitting_radius: 11
print_slope: <span class="nb">true
</span>print_aspect: <span class="nb">true
</span>print_curvature: <span class="nb">true
</span>print_tangential_curvature: <span class="nb">true</span>

</code></pre></div></div>

<p>In this example with such parameters, it is assumed that:</p>

<ul>
  <li>Lines beginning with the <code class="language-plaintext highlighter-rouge">#</code> symbol are comments. They will not be taken into account by the software.</li>
  <li>Input DEM and parameters file should be located in the directory in which you run the command.</li>
  <li>Outputs will be created in the same current directory.</li>
  <li><code class="language-plaintext highlighter-rouge">WA</code> is the name of the DEM, without the <code class="language-plaintext highlighter-rouge">.bil</code> extension.</li>
  <li>The outputs will have a prefix as <code class="language-plaintext highlighter-rouge">WA_SecondExample</code>.</li>
  <li>Four outputs are created, using a given surface fitting radius: slope, aspect, curvature and tangential curvature.</li>
</ul>

<p>Parameters documentation can be found <a href="https://lsdtopotools.github.io/LSDTT_documentation/LSDTT_basic_usage.html#_analysis_options_for_the_lsdtt_basic_metrics_program">here</a>.</p>

<h3 id="parameters-file">Parameters file</h3>

<p>Parameters files are named as follows: <code class="language-plaintext highlighter-rouge">MyParametersFile.driver</code>. They always have the same structure. These files can be created or modified using e.g. Notepad or directly via the terminal using <code class="language-plaintext highlighter-rouge">vim</code>. In Notepad, save them as txt files but write the <code class="language-plaintext highlighter-rouge">.driver</code> extension in the filename.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># These are parameters for the file i/o</span>
<span class="c"># IMPORTANT: You MUST make the write directory: the code will not work if it doesn't exist.</span>
<span class="nb">read </span>fname: mnt-vesdre
write fname: mnt-vesdre
channel heads fname: NULL

<span class="c"># Definition of the parameters to run a given script</span>
parameter_name: parameter_value
...
...
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">read fname</code> and <code class="language-plaintext highlighter-rouge">write fname</code> are usually the same, when inputs and outputs are stored in different directories. They define the prefix for inputs and outputs, i.e. the name of the input DEM, without the file extension.</li>
  <li>Inputs and outputs are stored in the same directory. This is required for data visualisation.</li>
  <li>The parameters file should be located in the same directory as the inputs.</li>
</ul>

<h2 id="directory-structure-1">Directory structure</h2>

<h3 id="typical-setup">Typical setup</h3>

<ol>
  <li>
    <p>In the <code class="language-plaintext highlighter-rouge">lsdtt/data</code> directory, create a new directory for your analyses, e.g. named <code class="language-plaintext highlighter-rouge">dem-analysis</code>, and enter it:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nb">cd
 cd </span>lsdtt/data

 <span class="nb">mkdir </span>dem-analysis
 <span class="nb">cd </span>dem-analysis
</code></pre></div>    </div>
  </li>
  <li>
    <p>All the guidelines are based on this specific directory structure.</p>
  </li>
</ol>

<hr />

<h2 id="get-the-dem-of-your-study-area">Get the DEM of your study area</h2>

<p>The DEM of your study are is stored as an archive file <code class="language-plaintext highlighter-rouge">.zip</code> in the <code class="language-plaintext highlighter-rouge">/storepelican/fclapuyt/LGEO2240-DEM/</code> directory.</p>

<p><img src="imgs/storepelican-dem.png" alt="storepelican-dem" /></p>

<p>The aim is to copy the <code class="language-plaintext highlighter-rouge">.zip</code> directory of your study area into the <code class="language-plaintext highlighter-rouge">lsdtt/data/dem-analysis</code> directory, and unzip it into the <code class="language-plaintext highlighter-rouge">inputs</code> directory. To do so, execute the following sequence of commands:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Set the current directory as lsdtt/data/dem-analysis</span>
<span class="nb">cd
cd </span>lsdtt/data/dem-analysis

<span class="c"># List files in the repository of the practical sessions</span>
<span class="nb">ls</span> /storepelican/fclapuyt/LGEO2240-DEM/

<span class="c"># Copy your archive file into the current directory</span>
<span class="nb">cp</span> /storepelican/fclapuyt/LGEO2240-DEM/NAME_OF_STUDY_AREA.zip ./

<span class="c"># Unzip the archive file into the current directory</span>
unzip NAME_OF_STUDY_AREA.zip

<span class="c"># Check that files are properly stored in the current directory</span>
<span class="nb">ls</span>

<span class="c"># Remove .zip file</span>
<span class="nb">rm</span> <span class="nt">-f</span> NAME_OF_STUDY_AREA.zip
</code></pre></div></div>

<h2 id="a-first-topographic-analysis-of-your-study-area">A first topographic analysis of your study area</h2>

<ol>
  <li>
    <p>Create a parameters file in the <code class="language-plaintext highlighter-rouge">dem-analysis</code> directory:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nb">cd
 cd </span>lsdtt/data/dem-analysis
 vim basic-analysis.driver
</code></pre></div>    </div>
  </li>
  <li>
    <p>Paste the following content that might be something plausible for your study area. Adapt the parameters to your needs, e.g. the name of the input name and output prefix, minimum and maximum basin sizes, river threshold for contributing pixels.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="c"># Parameters for extracting simple surface metrics</span>
 <span class="c"># Comments are preceeded by the hash symbol</span>
 <span class="c"># Documentation can be found at: https://lsdtopotools.github.io/LSDTT_documentation/LSDTT_basic_usage.html</span>

 <span class="c"># These are parameters for the file i/o</span>
 <span class="nb">read </span>fname: dem-ambleve-10m
 write fname: dem-ambleve-10m
 channel heads fname: NULL

 <span class="c"># Parameters for surface metrics</span>
 surface_fitting_radius: 50
 print_slope: <span class="nb">true
 </span>print_aspect: <span class="nb">true
 </span>print_curvature: <span class="nb">true
 </span>print_tangential_curvature: <span class="nb">true
 </span>write_hillshade: <span class="nb">true</span>

 <span class="c"># Getting the basins</span>
 find_basins: <span class="nb">true
 </span>minimum_basin_size_pixels: 10000
 maximum_basin_size_pixels: 1000000
 only_take_largest_basin: <span class="nb">false</span>

 <span class="c"># Print the basin raster</span>
 print_basin_raster: <span class="nb">true</span>

 <span class="c"># Basic channel network</span>
 threshold_contributing_pixels: 1000
 print_junctions_to_csv: <span class="nb">true
 </span>print_channels_to_csv: <span class="nb">true</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>Run the <code class="language-plaintext highlighter-rouge">lsdtt-basic-metric</code> module on the created parameter file:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> lsdtt-basic-metrics basic-analysis.driver
</code></pre></div>    </div>
  </li>
  <li>
    <p>It will take some time to run. But you will quickly see that it runs very fast in comparison to QGIS given the amount of pixels to process and outputs created. Six outputs are created (!): slope, aspect, curvature and tangential curvature, hillshade and catchments. From here, you will begin to understand that learning all the shell / server / LSDTopoTools stuff could really worth it‚Ä¶ :-)</p>
  </li>
</ol>

<h2 id="data-visualisation-on-the-server">Data visualisation on the server</h2>

<p>The LSDMappingTools module enables to visualise data without downloading the data on your local drive and open them in QGIS. Once  you have created your outputs, you can plot the DEM with the superimposed basins with the <code class="language-plaintext highlighter-rouge">PlotBasicRaster.py</code> tool:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python ~/lsdtt/LSDMappingTools/PlotBasicRasters.py <span class="nt">-dir</span> ./ <span class="nt">-fname</span> dem-ambleve-10m <span class="nt">-drape_fname</span> dem-ambleve-10m <span class="nt">-PD</span> True <span class="nt">-PB</span> True <span class="nt">-dpi</span> 300
</code></pre></div></div>

<p>Outputs of LSDMappingTools are created in a new directory <code class="language-plaintext highlighter-rouge">raster_plots</code> that is created in the <code class="language-plaintext highlighter-rouge">dem-analysis</code> directory. To visualise them:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># List files in the raster_plots directory</span>
<span class="nb">ls </span>raster_plots
<span class="c"># Display the output you want...</span>
display raster_plots/dem-ambleve-10m_basins_selected_basins.png
</code></pre></div></div>

<h2 id="manage-outputs-of-successive-analyses">Manage outputs of successive analyses</h2>

<p>In order to keep track of all your analyses, you could for instance duplicate the <code class="language-plaintext highlighter-rouge">dem-analysis</code> directory for each new analysis, rename the old one and empty the <em>main</em> <code class="language-plaintext highlighter-rouge">dem-analysis</code> directory. This could be done using the following sequence of commands:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Enter data directory</span>
<span class="nb">cd
cd </span>lsdtt/data

<span class="c"># Copy dem-analysis directory into dem-analysis-v1 (name to be adapted to your needs)</span>
<span class="nb">cp</span> <span class="nt">-r</span> dem-analysis dem-analysis-v1
</code></pre></div></div>

<p>Finally, remove outputs in <code class="language-plaintext highlighter-rouge">dem-analysis</code> directory. Outputs are named as follows <code class="language-plaintext highlighter-rouge">PREFIX_TYPE-OF-OUTPUTS.EXT</code>, e.g. <code class="language-plaintext highlighter-rouge">dem-ambleve-10m_SLOPE.tif</code>,  <code class="language-plaintext highlighter-rouge">dem-ambleve-10m_TAN.tif</code> or <code class="language-plaintext highlighter-rouge">dem-ambleve-10m_SLOPE.tif</code>. To remove all outputs in one command, use the asterisk <code class="language-plaintext highlighter-rouge">*</code> to select all files that begin with <code class="language-plaintext highlighter-rouge">PREFIX_</code>.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">rm</span> <span class="nt">-f</span> dem-analysis/dem-ambleve-10m_<span class="k">*</span>
</code></pre></div></div>

<h2 id="data-transfer">Data transfer</h2>

<p>Data transfer can be done in the two <em>directions</em>, i.e. download data from the server to your local drive (outputs) and upload data from your local drive to the server (i.e. parameters files, river junctions,..).</p>

<h3 id="on-windows">On Windows</h3>

<p>In the MobaXterm interface, you can simply download and upload files using the file browser on the left panel. Use the buttons on the top of the file browser or right-click on files and directories.</p>

<p><img src="imgs/mobaxterm-sftp.png" alt="mobaxterm-sftp" /></p>

<h3 id="on-mac--linux---windows">On Mac / Linux  / Windows</h3>

<p>There is no GUI for file transfer in Terminus. Instead, you have two possibilities:</p>

<ul>
  <li>Use <a href="https://nextcloud.cism.ucl.ac.be">Nextcloud</a> with a mounted external storage. See the document <code class="language-plaintext highlighter-rouge">1_Technical_resources</code> for more info.</li>
  <li>
    <p>Use a local session of the terminal (using the <code class="language-plaintext highlighter-rouge">+</code> in the Menu bar) to execute this type of commands:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  scp <span class="nt">-r</span> <span class="nt">-oProxyCommand</span><span class="o">=</span><span class="s2">"ssh -W %h:%p MY_LOGIN@gwcism.cism.ucl.ac.be"</span> MY_LOGIN@pelican.cism.ucl.ac.be:PATH_TO_FOLDER_ON_THE_SERVER/<span class="k">*</span> PATH_TO_FOLDER_ON_LOCAL_MACHINE
  <span class="sb">``</span>
</code></pre></div>    </div>
  </li>
</ul>

<p><img src="imgs/terminus-local-terminal.png" alt="terminus-local-terminal" /></p>

<hr />

<h2 id="whats-next-">What‚Äôs next ?</h2>

<p>Now, you are able to perform a basic topographic analysis on a very large amount of pixels in a very limited amount of time‚Ä¶ Three modules of LSDTopoTools are useful for the analyses to achieve in the frame of the research project:</p>

<ul>
  <li>The basic analysis (<a href="https://lsdtopotools.github.io/LSDTT_documentation/LSDTT_basic_usage.html">resources</a>): <code class="language-plaintext highlighter-rouge">lsdtt-basic-metrics</code></li>
  <li>The channel extraction (<a href="https://lsdtopotools.github.io/LSDTT_documentation/LSDTT_channel_extraction.html">resources</a>): <code class="language-plaintext highlighter-rouge">lsdtt-channel-extraction</code>.</li>
  <li>The Chi analysis (<a href="https://lsdtopotools.github.io/LSDTT_documentation/LSDTT_chi_analysis.html">resources</a>): <code class="language-plaintext highlighter-rouge">lsdtt-chi-mapping</code>.</li>
</ul>

<p>The manual for each module contains a lot of information‚Ä¶ Focus <em>mainly</em> on ‚ÄúAppendix A‚Äù of each manual, which contains the parameters that are available, their explanation, and their potential to fulfill your needs. Each module works with a parameters file that has the same structure than the one you used for the first analysis of your study area. You <em>only</em> need to add or remove parameters in the fill and run it with the proper command.</p>

<p>You are now able to explore further the possibilities of LSDTopoToolsn, applied on your study area‚Ä¶</p>

<h3 id="important-note-">Important note !</h3>

<p>Each time you connect to the server, you will need to load LSDTopoTools before running the first command. Simply type:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>load_LSDTopoTools
</code></pre></div></div>

<hr />

<hr />

<h2 id="other-notes-legacy---not-useful-for-the-sessions">Other notes (legacy - not useful for the sessions)</h2>

<p>A slightly more robust and versatile parameter file regarding inputs and outputs management, would be the following:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># These are parameters for the file i/o</span>
<span class="c"># IMPORTANT: You MUST make the write directory: the code will not work if it doesn't exist.</span>
<span class="nb">read </span>path: /lsdtt/data/inputs
write path: /lsdtt/data/outputs
<span class="nb">read </span>fname: mnt-vesdre
write fname: mnt-vesdre
channel heads fname: NULL

<span class="c"># Definition of the parameters to run a given script</span>
parameter_name: parameter_value
...
...
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">read path</code> and <code class="language-plaintext highlighter-rouge">write path</code> define paths for inputs and outputs directories located in the <code class="language-plaintext highlighter-rouge">data</code> directory.
<strong>Attention:</strong> The output directory should be created before running the module.</li>
  <li><code class="language-plaintext highlighter-rouge">read fname</code> and <code class="language-plaintext highlighter-rouge">write fname</code> are usually the same, when inputs and outputs are stored in different directories. They define the prefix for inputs and outputs, i.e. the name of the input DEM, without the file extension.</li>
</ul>
:ET